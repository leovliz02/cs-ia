<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>All Demands – Team Manager</title>
  {% load static%}
  <link rel="stylesheet" href="{% static 'styles.css' %}">
  <style>
    .container {
      max-width: 1000px;
      margin: 2rem auto;
      padding: 1rem;
      background: white;
      border-radius: 8px;
      box-shadow: 0 2px 8px rgba(0,0,0,0.1);
    }

    .filter-section {
        margin-bottom: 1.5rem;
        padding: 1rem;
        background-color: #e9ecef;
        border-radius: 8px;
        display: flex;
        gap: 1rem;
        align-items: center;
        flex-wrap: wrap;  
    }

    .filter-section label {
        font-weight: bold;
        margin-right: 0.5rem;
    }

    .filter-section select {
        padding: 0.5rem;
        border: 1px solid #ccc;
        border-radius: 4px;
        min-width: 150px;
    }

    .filter-btn {
        padding: 0.5rem 1rem;
        background-color: #007bff;
        color: white;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        transition: background-color 0.3s ease;
    }

    .filter-btn:hover {
        background-color: #0056b3;
    }

    table {
      width: 100%;
      border-collapse: collapse;
      margin-top: 1rem;
    }

    th, td {
      padding: 0.75rem;
      border: 1px solid #ccc;
      text-align: left;
    }

    th {
      background-color: #f1f1f1;
    }

    .actions button {
      margin-right: 0.5rem;
      padding: 0.3rem 0.6rem;
      font-size: 0.9rem;
      border: none;
      border-radius: 4px;
      cursor: pointer;
      transition: background-color 0.3s ease;
    }

    .edit-btn {
      background-color: #ffc107;
      color: white;
    }
    .edit-btn:hover { background-color: #e0a800; }

    .delete-btn {
      background-color: #dc3545;
      color: white;
    }
    .delete-btn:hover { background-color: #c82333; }

    .add-btn {
      padding: 0.5rem 1rem;
      background-color: #28a745;
      color: white;
      border: none;
      border-radius: 5px;
      font-size: 0.95rem;
      cursor: pointer;
      transition: background-color 0.3s ease;
    }
    .add-btn:hover { background-color: #218838; }

    .assign-btn {
        background-color: #17a2b8;
        color: white;
    }
    .assign-btn:hover { background-color: #138496; }

    .popup-bg {
      position: fixed;
      top: 0; left: 0; right: 0; bottom: 0;
      background: rgba(0,0,0,0.4);
      display: none;  
      justify-content: center;
      align-items: center;
      z-index: 10;
    }

    .popup {
      background: white;
      padding: 2rem;
      border-radius: 10px;
      width: 500px;
      box-shadow: 0 4px 10px rgba(0,0,0,0.2);
      max-height: 90vh; 
      overflow-y: auto; 
    }

    .popup h3 {
      margin-top: 0;
    }

    .popup label {
      display: block;
      margin-top: 1rem;
      font-weight: bold;
    }

    .popup input,
    .popup select {
      width: 100%;
      padding: 0.5rem;
      margin-top: 0.3rem;
      border: 1px solid #ccc;
      border-radius: 4px;
      box-sizing: border-box; 
    }

    .popup-buttons {
      display: flex;
      justify-content: space-between;
      margin-top: 1.5rem;
    }

    .popup-buttons button {
      flex: 1;
      margin: 0 0.25rem;
      padding: 0.5rem;
      font-size: 1rem;
      border: none;
      border-radius: 4px;
      cursor: pointer;
      transition: background-color 0.3s ease;
    }

    .popup-buttons .cancel {
      background-color: #ccc;
    }
    .popup-buttons .cancel:hover { background-color: #b0b0b0; }

    .popup-buttons .save {
      background-color: #007bff;
      color: white;
    }
    .popup-buttons .save:hover { background-color: #0056b3; }

    .error-message {
        color: red;
        font-size: 0.85rem;
        margin-top: 0.5rem;
    }
  </style>
</head>

<body>

  <header>
    <h1>Manager Portal</h1>
    <a href="{% url 'logout' %}" class="logout-link">Logout</a>
  </header>

  <nav>
    <a href="{% url 'manager_teams_page' %}">Teams</a>
    <a href="{% url 'manager_demands_page' %}" class="active">Demands</a>
    <a href="{% url 'manager_approvals_page' %}">Approvals Pending</a>
  </nav>

  <div class="container">
    <h2>
      All Demands
      <button class="add-btn" onclick="openDemandPopup()">+ Add Demand</button>
    </h2>


    <!--filter options code-->
    <div class="filter-section">
        <form method="GET" class="filter-form">
            <label for="team_filter">Filter by Team:</label>
            <select name="team_id" id="team_filter">
                <option value="">All Teams</option>
                {% for team in teams %}
                    <option value="{{ team.teamID }}" {% if team.teamID|stringformat:"s" == selected_team_id %}selected{% endif %}>{{ team.teamName }}</option>
                {% endfor %}
            </select>

            <label for="assignment_filter">Filter by Assignment Status:</label>
            <select name="assignment_status" id="assignment_filter">
                <option value="">All</option>
                <option value="assigned" {% if selected_assignment_status == "assigned" %}selected{% endif %}>Assigned</option>
                <option value="unassigned" {% if selected_assignment_status == "unassigned" %}selected{% endif %}>Unassigned</option>
            </select>
            <button type="submit" class="filter-btn">Apply Filters</button>
        </form>
    </div>


    <table>
      <thead>
        <tr>
          <th>Name</th>
          <th>Team</th>
          <th>Start Date</th>
          <th>Predicted End</th>
          <th>Actual End</th>
          <th>Time Required</th>
          <th>Completion Status</th>
          <th>Assignment Status</th>
          <th>Actions</th>
        </tr>
      </thead>
      <tbody id="demandTableBody">
        {% for demand in demands %}
        <tr data-demand-id="{{ demand.demandID }}">
          <td>{{ demand.demand_name }}</td>
          <td>{% if demand.team %}{{ demand.team.team_name }}{% else %}Unassigned{% endif %}</td>
          <td>{{ demand.start_date|date:"d/m/y" }}</td>
          <td>{% if demand.estimated_end_date %}{{ demand.estimated_end_date|date:"d/m/y" }}{% else %}N/A{% endif %}</td>
          <td>{% if demand.actual_end_date %}{{ demand.actual_end_date|date:"d/m/y" }}{% else %}–{% endif %}</td>
          <td>{{ demand.timeNeeded }} hrs</td>
          <td>
            {% if demand.demandCompletionStatus %}Finished{% else %}
                {% if demand.timeCompleted > 0 %}In Progress{% else %}Pending{% endif %}
            {% endif %}
          </td>
          <td>{% if demand.team %}Assigned{% else %}Unassigned{% endif %}</td>
          <td class="actions">
            <button class="edit-btn" onclick="openDemandPopup('{{ demand.demandID }}')"Edit</button>
            {% if not demand.team %} {# Show assign button only if unassigned #}
                <button class="assign-btn" onclick="openDemandPopup('{{ demand.demandID }}')">Assign</button>
            {% endif %}
            <button class="delete-btn" onclick="deleteDemand('{{ demand.demandID }}')">Delete</button>
          </td>
        </tr>
        {% empty %}
        <tr><td colspan="9">No demands found.</td></tr>
        {% endfor %}
      </tbody>
    </table>
  </div>

  <!-- popup to assign demands-->


<div class="popup-bg" id="demandPopupBg">
    <div class="popup">
      <h3 id="demandPopupTitle">Add Demand</h3>
      <form id="demandForm" class="demand-form">
        {% csrf_token %}
        <input type="hidden" id="demandId" name="demandID" />

        <div id = "step_one">
        <label for="demand_name">Demand Name:</label>
        <input type="text" id="demand_name" name="demand_name" required />

        <label for="start_date">Start Date:</label>
        <input type="date" id="start_date" name="start_date" required />

        <label for="time_needed">Time Required (hours):</label>
        <input type="number" id="time_needed" name="time_needed" min="1" required />

          <button type="button" onclick="goToStep2()"> Next </button>
        </div>
        <div id="step_two" style="display: none;">
        <label for="demand_name"> Demand Name:</label>
        <input type="text" id="demand_name" name="demand_name" readonly />

        <label for="start_date"> Start Date:</label>
        <input type="date" id="start_date" name="start_date" readonly />

        <label for="time_needed"> Time Required (hours):</label>
        <input type="number" id="time_needed" name="time_needed" min="1" readonly />

          <label>Team Name:</label>
                <select name="team_name" id="teamSelect">
                </select>

          <button type="submit">Submit</button>
        </div>
      </form>
    </div>
  </div>

<script>

  function togglePredictedEndDateVisibility() {
      const predictedEndGroup = document.getElementById("predictedEndDateGroup");
      const assignTeamContainer = document.getElementById("assignTeamContainer");
      const allocation_mode_selection = document.getElementById("allocation_mode_selection");

      if (allocation_mode_selection.value === "NA") {
          predictedEndGroup.style.display = "none";
          assignTeamContainer.style.display = "none";
      }

      if (allocation_mode_selection.value === "even") {
          assignTeamContainer.style.display = "block";
          
      } else if (allocation_mode_selection.value === "squeeze") {
          predictedEndGroup.style.display = "block";
      }
  }

  const name = document.querySelector('[name="demand_name"]').value.trim();
  const time = document.querySelector('[name="time_needed"]').value;
  const startDate = document.querySelector('[name="start_date"]').value;

  if (!name || !time || !startDate) {
    alert("Please complete all fields before proceeding.");
    return;
  }

  fetch('/api/demands/get_teams_meeting_deadline/', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'X-CSRFToken': getCookie('csrftoken'), 
    },
    body: JSON.stringify({
      demand_name: demand_name,
      time_needed: time_needed,
      start_date: start_date
    })
  })
  .then(response => response.json())
  .then(data => {
    if (data.success) {

      document.getElementById('demand_ID').value = data.demand_id;

      document.getElementById('step1').style.display = 'none';
      document.getElementById('step2').style.display = 'block';
    } else {
      alert("Error creating demand: " + data.message);
    }
  })
  .catch(error => {
    console.error('Error:', error);
    alert("Something went wrong while creating the demand.");
  });

    // to dynamically load options for team names
  document.getElementById('demand_id').value = data.demand_id;
  const teamSelect = document.getElementById('teamSelect');
  teamSelect.innerHTML = '';

  data.teams.forEach(team => {
    const option = document.createElement('option');
    option.value = team.team_ID;
    option.textContent = team.team_name;
    teamSelect.appendChild(option);
  });

  // cookie management for csrf token
    function getCookie(name) {
      let cookieValue = null;
      if (document.cookie && document.cookie !== '') {
          const cookies = document.cookie.split(';');
          for (let i = 0; i < cookies.length; i++) {
              const cookie = cookies[i].trim();
              if (cookie.substring(0, name.length + 1) === (name + '=')) {
                  cookieValue = decodeURIComponent(cookie.substring(name.length + 1));
                  break;
              }
          }
      }
      return cookieValue;
    }

</script>